"use client"

import { useState } from "react"
import { X, Bell, ChevronRight } from "lucide-react"

interface Notification {
  id: string
  title: string
  message: string
  time: string
  isRead: boolean
  type: "transaction" | "promotion" | "system"
}

interface NotificationsModalProps {
  isOpen: boolean
  onClose: () => void
  onViewAll: () => void
}

export default function NotificationsModal({ isOpen, onClose, onViewAll }: NotificationsModalProps) {
  const [notifications, setNotifications] = useState<Notification[]>([
    {
      id: "1",
      title: "Money Received",
      message: "You have received K250 from John Doe",
      time: "2 hours ago",
      isRead: false,
      type: "transaction",
    },
    {
      id: "2",
      title: "50% Off on Data Bundles",
      message: "Limited time offer: Get 50% off on all data bundles",
      time: "Yesterday",
      isRead: true,
      type: "promotion",
    },
    {
      id: "3",
      title: "Security Alert",
      message: "Your account was accessed from a new device",
      time: "2 days ago",
      isRead: true,
      type: "system",
    },
  ])

  const markAsRead = (id: string) => {
    setNotifications(
      notifications.map((notification) => (notification.id === id ? { ...notification, isRead: true } : notification)),
    )
  }

  if (!isOpen) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-xl w-full max-w-md overflow-hidden">
        <div className="p-4 border-b flex justify-between items-center">
          <h2 className="text-lg font-semibold">Notifications</h2>
          <button onClick={onClose} className="p-1 rounded-full hover:bg-gray-100">
            <X className="w-5 h-5 text-gray-500" />
          </button>
        </div>

        <div className="max-h-96 overflow-y-auto no-scrollbar">
          {notifications.length > 0 ? (
            notifications.map((notification) => (
              <div
                key={notification.id}
                className={`p-4 border-b ${notification.isRead ? "bg-white" : "bg-emerald-50"}`}
                onClick={() => markAsRead(notification.id)}
              >
                <div className="flex items-start">
                  <div
                    className={`p-2 rounded-full mr-3 ${
                      notification.type === "transaction"
                        ? "bg-emerald-100 text-emerald-600"
                        : notification.type === "promotion"
                          ? "bg-blue-100 text-blue-600"
                          : "bg-red-100 text-red-600"
                    }`}
                  >
                    <Bell className="w-4 h-4" />
                  </div>
                  <div className="flex-1">
                    <div className="flex justify-between items-start">
                      <h3 className="font-medium">{notification.title}</h3>
                      <span className="text-xs text-gray-500">{notification.time}</span>
                    </div>
                    <p className="text-sm text-gray-600 mt-1">{notification.message}</p>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <div className="p-8 text-center text-gray-500">
              <Bell className="w-12 h-12 mx-auto mb-3 text-gray-300" />
              <p>No notifications yet</p>
            </div>
          )}
        </div>

        <div className="p-3 border-t">
          <button
            className="w-full py-2 text-center text-emerald-600 font-medium flex items-center justify-center"
            onClick={onViewAll}
          >
            View All Notifications
            <ChevronRight className="w-4 h-4 ml-1" />
          </button>
        </div>
      </div>
    </div>
  )
}

