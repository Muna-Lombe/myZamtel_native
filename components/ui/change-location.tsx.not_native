"use client"

import { useState } from "react"
import { X, MapPin, Search, ChevronRight } from "lucide-react"

interface ChangeLocationProps {
  isOpen: boolean
  onClose: () => void
  onLocationSelect: (location: string) => void
}

export default function ChangeLocation({ isOpen, onClose, onLocationSelect }: ChangeLocationProps) {
  const [searchQuery, setSearchQuery] = useState("")

  const locations = [
    "Lusaka",
    "Kitwe",
    "Ndola",
    "Kabwe",
    "Chingola",
    "Mufulira",
    "Livingstone",
    "Luanshya",
    "Chipata",
    "Kasama",
  ]

  const filteredLocations = locations.filter((location) => location.toLowerCase().includes(searchQuery.toLowerCase()))

  if (!isOpen) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-xl w-full max-w-md overflow-hidden">
        <div className="p-4 border-b flex justify-between items-center">
          <h2 className="text-lg font-semibold">Change Location</h2>
          <button onClick={onClose} className="p-1 rounded-full hover:bg-gray-100">
            <X className="w-5 h-5 text-gray-500" />
          </button>
        </div>

        <div className="p-4">
          <div className="relative mb-4">
            <div className="absolute inset-y-0 left-3 flex items-center pointer-events-none">
              <Search className="h-4 w-4 text-gray-400" />
            </div>
            <input
              type="text"
              placeholder="Search locations..."
              className="w-full pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
          </div>

          <div className="mb-4">
            <div className="flex items-center space-x-2 text-emerald-500 mb-2">
              <MapPin className="w-4 h-4" />
              <span className="text-sm font-medium">Current Location</span>
            </div>
            <button
              className="w-full text-left p-3 rounded-lg bg-gray-50 hover:bg-gray-100"
              onClick={() => {
                onLocationSelect("Use Current Location")
                onClose()
              }}
            >
              Use Current Location
            </button>
          </div>

          <div>
            <h3 className="text-sm font-medium text-gray-500 mb-2">All Locations</h3>
            <div className="max-h-60 overflow-y-auto no-scrollbar">
              {filteredLocations.length > 0 ? (
                filteredLocations.map((location, index) => (
                  <button
                    key={index}
                    className="w-full text-left p-3 flex justify-between items-center border-b last:border-0 hover:bg-gray-50"
                    onClick={() => {
                      onLocationSelect(location)
                      onClose()
                    }}
                  >
                    <span>{location}</span>
                    <ChevronRight className="w-4 h-4 text-gray-400" />
                  </button>
                ))
              ) : (
                <div className="p-3 text-center text-gray-500">No locations found</div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

